(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :
    typeof define === 'function' && define.amd ? define(['exports'], factory) :
    (global = global || self, factory(global.doCopy = {}));
}(this, function (exports) { 'use strict';

    function select(element) {
        var selectedText;

        if (element.nodeName === 'SELECT') {
            element.focus();

            selectedText = element.value;
        }
        else if (element.nodeName === 'INPUT' || element.nodeName === 'TEXTAREA') {
            var isReadOnly = element.hasAttribute('readonly');

            if (!isReadOnly) {
                element.setAttribute('readonly', '');
            }

            element.select();
            element.setSelectionRange(0, element.value.length);

            if (!isReadOnly) {
                element.removeAttribute('readonly');
            }

            selectedText = element.value;
        }
        else {
            if (element.hasAttribute('contenteditable')) {
                element.focus();
            }

            var selection = window.getSelection();
            var range = document.createRange();

            range.selectNodeContents(element);
            selection.removeAllRanges();
            selection.addRange(range);

            selectedText = selection.toString();
        }

        return selectedText;
    }

    var select_1 = select;

    function _doCopy(cb = () => {}) {
      let succeeded;

      try {
        succeeded = document.execCommand("copy");
      } catch (err) {
        succeeded = false;
      }

      cb(succeeded);
      return succeeded;
    }

    function copyText(text) {
      const isRTL = document.documentElement.getAttribute("dir") == "rtl";
      let fakeElem = document.createElement("textarea"); // Prevent zooming on iOS

      fakeElem.style.fontSize = "12pt"; // Reset box model

      fakeElem.style.border = "0";
      fakeElem.style.padding = "0";
      fakeElem.style.margin = "0"; // Move element out of screen horizontally

      fakeElem.style.position = "absolute";
      fakeElem.style[isRTL ? "right" : "left"] = "-9999px"; // Move element to the same position vertically

      let yPosition = window.pageYOffset || document.documentElement.scrollTop;
      fakeElem.style.top = `${yPosition}px`;
      fakeElem.setAttribute("readonly", "");
      fakeElem.value = text;
      document.body.appendChild(fakeElem);
      select_1(fakeElem);
      return _doCopy(() => {
        _clearSelection();

        document.body.removeChild(fakeElem);
      });
    }
    function copyFromElem(target) {
      let targetElem = target;

      if (typeof target === "string") {
        targetElem = document.querySelector(target);
      }

      if (!targetElem) {
        return false;
      }

      select_1(targetElem);
      return _doCopy(() => {
        _clearSelection();
      });
    }

    function _clearSelection() {
      window.getSelection().removeAllRanges();
    }

    exports.copyText = copyText;
    exports.copyFromElem = copyFromElem;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZG8tY29weS5qcyIsInNvdXJjZXMiOlsiLi4vbm9kZV9tb2R1bGVzL3NlbGVjdC9zcmMvc2VsZWN0LmpzIiwiLi4vc3JjL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIHNlbGVjdChlbGVtZW50KSB7XG4gICAgdmFyIHNlbGVjdGVkVGV4dDtcblxuICAgIGlmIChlbGVtZW50Lm5vZGVOYW1lID09PSAnU0VMRUNUJykge1xuICAgICAgICBlbGVtZW50LmZvY3VzKCk7XG5cbiAgICAgICAgc2VsZWN0ZWRUZXh0ID0gZWxlbWVudC52YWx1ZTtcbiAgICB9XG4gICAgZWxzZSBpZiAoZWxlbWVudC5ub2RlTmFtZSA9PT0gJ0lOUFVUJyB8fCBlbGVtZW50Lm5vZGVOYW1lID09PSAnVEVYVEFSRUEnKSB7XG4gICAgICAgIHZhciBpc1JlYWRPbmx5ID0gZWxlbWVudC5oYXNBdHRyaWJ1dGUoJ3JlYWRvbmx5Jyk7XG5cbiAgICAgICAgaWYgKCFpc1JlYWRPbmx5KSB7XG4gICAgICAgICAgICBlbGVtZW50LnNldEF0dHJpYnV0ZSgncmVhZG9ubHknLCAnJyk7XG4gICAgICAgIH1cblxuICAgICAgICBlbGVtZW50LnNlbGVjdCgpO1xuICAgICAgICBlbGVtZW50LnNldFNlbGVjdGlvblJhbmdlKDAsIGVsZW1lbnQudmFsdWUubGVuZ3RoKTtcblxuICAgICAgICBpZiAoIWlzUmVhZE9ubHkpIHtcbiAgICAgICAgICAgIGVsZW1lbnQucmVtb3ZlQXR0cmlidXRlKCdyZWFkb25seScpO1xuICAgICAgICB9XG5cbiAgICAgICAgc2VsZWN0ZWRUZXh0ID0gZWxlbWVudC52YWx1ZTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGlmIChlbGVtZW50Lmhhc0F0dHJpYnV0ZSgnY29udGVudGVkaXRhYmxlJykpIHtcbiAgICAgICAgICAgIGVsZW1lbnQuZm9jdXMoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciBzZWxlY3Rpb24gPSB3aW5kb3cuZ2V0U2VsZWN0aW9uKCk7XG4gICAgICAgIHZhciByYW5nZSA9IGRvY3VtZW50LmNyZWF0ZVJhbmdlKCk7XG5cbiAgICAgICAgcmFuZ2Uuc2VsZWN0Tm9kZUNvbnRlbnRzKGVsZW1lbnQpO1xuICAgICAgICBzZWxlY3Rpb24ucmVtb3ZlQWxsUmFuZ2VzKCk7XG4gICAgICAgIHNlbGVjdGlvbi5hZGRSYW5nZShyYW5nZSk7XG5cbiAgICAgICAgc2VsZWN0ZWRUZXh0ID0gc2VsZWN0aW9uLnRvU3RyaW5nKCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHNlbGVjdGVkVGV4dDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzZWxlY3Q7XG4iLCJpbXBvcnQgc2VsZWN0IGZyb20gXCJzZWxlY3RcIjtcblxuZnVuY3Rpb24gX2RvQ29weShjYiA9ICgpID0+IHt9KSB7XG4gIGxldCBzdWNjZWVkZWQ7XG4gIHRyeSB7XG4gICAgc3VjY2VlZGVkID0gZG9jdW1lbnQuZXhlY0NvbW1hbmQoXCJjb3B5XCIpO1xuICB9IGNhdGNoIChlcnIpIHtcbiAgICBzdWNjZWVkZWQgPSBmYWxzZTtcbiAgfVxuICBjYihzdWNjZWVkZWQpO1xuICByZXR1cm4gc3VjY2VlZGVkO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gY29weVRleHQodGV4dCkge1xuICBjb25zdCBpc1JUTCA9IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5nZXRBdHRyaWJ1dGUoXCJkaXJcIikgPT0gXCJydGxcIjtcbiAgbGV0IGZha2VFbGVtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInRleHRhcmVhXCIpO1xuICAvLyBQcmV2ZW50IHpvb21pbmcgb24gaU9TXG4gIGZha2VFbGVtLnN0eWxlLmZvbnRTaXplID0gXCIxMnB0XCI7XG4gIC8vIFJlc2V0IGJveCBtb2RlbFxuICBmYWtlRWxlbS5zdHlsZS5ib3JkZXIgPSBcIjBcIjtcbiAgZmFrZUVsZW0uc3R5bGUucGFkZGluZyA9IFwiMFwiO1xuICBmYWtlRWxlbS5zdHlsZS5tYXJnaW4gPSBcIjBcIjtcbiAgLy8gTW92ZSBlbGVtZW50IG91dCBvZiBzY3JlZW4gaG9yaXpvbnRhbGx5XG4gIGZha2VFbGVtLnN0eWxlLnBvc2l0aW9uID0gXCJhYnNvbHV0ZVwiO1xuICBmYWtlRWxlbS5zdHlsZVtpc1JUTCA/IFwicmlnaHRcIiA6IFwibGVmdFwiXSA9IFwiLTk5OTlweFwiO1xuICAvLyBNb3ZlIGVsZW1lbnQgdG8gdGhlIHNhbWUgcG9zaXRpb24gdmVydGljYWxseVxuICBsZXQgeVBvc2l0aW9uID0gd2luZG93LnBhZ2VZT2Zmc2V0IHx8IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zY3JvbGxUb3A7XG4gIGZha2VFbGVtLnN0eWxlLnRvcCA9IGAke3lQb3NpdGlvbn1weGA7XG5cbiAgZmFrZUVsZW0uc2V0QXR0cmlidXRlKFwicmVhZG9ubHlcIiwgXCJcIik7XG4gIGZha2VFbGVtLnZhbHVlID0gdGV4dDtcbiAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChmYWtlRWxlbSk7XG4gIHNlbGVjdChmYWtlRWxlbSk7XG5cbiAgcmV0dXJuIF9kb0NvcHkoKCkgPT4ge1xuICAgIF9jbGVhclNlbGVjdGlvbigpO1xuICAgIGRvY3VtZW50LmJvZHkucmVtb3ZlQ2hpbGQoZmFrZUVsZW0pO1xuICB9KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNvcHlGcm9tRWxlbSh0YXJnZXQpIHtcbiAgbGV0IHRhcmdldEVsZW0gPSB0YXJnZXQ7XG4gIGlmICh0eXBlb2YgdGFyZ2V0ID09PSBcInN0cmluZ1wiKSB7XG4gICAgdGFyZ2V0RWxlbSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTtcbiAgfVxuICBpZiAoIXRhcmdldEVsZW0pIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgc2VsZWN0KHRhcmdldEVsZW0pO1xuICByZXR1cm4gX2RvQ29weSgoKSA9PiB7XG4gICAgX2NsZWFyU2VsZWN0aW9uKCk7XG4gIH0pO1xufVxuXG5mdW5jdGlvbiBfY2xlYXJTZWxlY3Rpb24oKSB7XG4gIHdpbmRvdy5nZXRTZWxlY3Rpb24oKS5yZW1vdmVBbGxSYW5nZXMoKTtcbn1cbiJdLCJuYW1lcyI6WyJfZG9Db3B5IiwiY2IiLCJzdWNjZWVkZWQiLCJkb2N1bWVudCIsImV4ZWNDb21tYW5kIiwiZXJyIiwiY29weVRleHQiLCJ0ZXh0IiwiaXNSVEwiLCJkb2N1bWVudEVsZW1lbnQiLCJnZXRBdHRyaWJ1dGUiLCJmYWtlRWxlbSIsImNyZWF0ZUVsZW1lbnQiLCJzdHlsZSIsImZvbnRTaXplIiwiYm9yZGVyIiwicGFkZGluZyIsIm1hcmdpbiIsInBvc2l0aW9uIiwieVBvc2l0aW9uIiwid2luZG93IiwicGFnZVlPZmZzZXQiLCJzY3JvbGxUb3AiLCJ0b3AiLCJzZXRBdHRyaWJ1dGUiLCJ2YWx1ZSIsImJvZHkiLCJhcHBlbmRDaGlsZCIsInNlbGVjdCIsIl9jbGVhclNlbGVjdGlvbiIsInJlbW92ZUNoaWxkIiwiY29weUZyb21FbGVtIiwidGFyZ2V0IiwidGFyZ2V0RWxlbSIsInF1ZXJ5U2VsZWN0b3IiLCJnZXRTZWxlY3Rpb24iLCJyZW1vdmVBbGxSYW5nZXMiXSwibWFwcGluZ3MiOiI7Ozs7OztJQUFBLFNBQVMsTUFBTSxDQUFDLE9BQU8sRUFBRTtRQUNyQixJQUFJLFlBQVksQ0FBQzs7UUFFakIsSUFBSSxPQUFPLENBQUMsUUFBUSxLQUFLLFFBQVEsRUFBRTtZQUMvQixPQUFPLENBQUMsS0FBSyxFQUFFLENBQUM7O1lBRWhCLFlBQVksR0FBRyxPQUFPLENBQUMsS0FBSyxDQUFDO1NBQ2hDO2FBQ0ksSUFBSSxPQUFPLENBQUMsUUFBUSxLQUFLLE9BQU8sSUFBSSxPQUFPLENBQUMsUUFBUSxLQUFLLFVBQVUsRUFBRTtZQUN0RSxJQUFJLFVBQVUsR0FBRyxPQUFPLENBQUMsWUFBWSxDQUFDLFVBQVUsQ0FBQyxDQUFDOztZQUVsRCxJQUFJLENBQUMsVUFBVSxFQUFFO2dCQUNiLE9BQU8sQ0FBQyxZQUFZLENBQUMsVUFBVSxFQUFFLEVBQUUsQ0FBQyxDQUFDO2FBQ3hDOztZQUVELE9BQU8sQ0FBQyxNQUFNLEVBQUUsQ0FBQztZQUNqQixPQUFPLENB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
